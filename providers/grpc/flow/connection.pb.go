// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connection.proto

package flow

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorStatus struct {
	Message              string     `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Details              []*any.Any `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ErrorStatus) Reset()         { *m = ErrorStatus{} }
func (m *ErrorStatus) String() string { return proto.CompactTextString(m) }
func (*ErrorStatus) ProtoMessage()    {}
func (*ErrorStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_51baa40a1cc6b48b, []int{0}
}

func (m *ErrorStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorStatus.Unmarshal(m, b)
}
func (m *ErrorStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorStatus.Marshal(b, m, deterministic)
}
func (m *ErrorStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorStatus.Merge(m, src)
}
func (m *ErrorStatus) XXX_Size() int {
	return xxx_messageInfo_ErrorStatus.Size(m)
}
func (m *ErrorStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorStatus proto.InternalMessageInfo

func (m *ErrorStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ErrorStatus) GetDetails() []*any.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

type RouteFlowRequest struct {
	Seq int32 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	// Types that are valid to be assigned to RouteRequest:
	//	*RouteFlowRequest_Exec
	RouteRequest         isRouteFlowRequest_RouteRequest `protobuf_oneof:"route_request"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RouteFlowRequest) Reset()         { *m = RouteFlowRequest{} }
func (m *RouteFlowRequest) String() string { return proto.CompactTextString(m) }
func (*RouteFlowRequest) ProtoMessage()    {}
func (*RouteFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51baa40a1cc6b48b, []int{1}
}

func (m *RouteFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteFlowRequest.Unmarshal(m, b)
}
func (m *RouteFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteFlowRequest.Marshal(b, m, deterministic)
}
func (m *RouteFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteFlowRequest.Merge(m, src)
}
func (m *RouteFlowRequest) XXX_Size() int {
	return xxx_messageInfo_RouteFlowRequest.Size(m)
}
func (m *RouteFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RouteFlowRequest proto.InternalMessageInfo

func (m *RouteFlowRequest) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type isRouteFlowRequest_RouteRequest interface {
	isRouteFlowRequest_RouteRequest()
}

type RouteFlowRequest_Exec struct {
	Exec *RouteFlowRequest_Execute `protobuf:"bytes,2,opt,name=exec,proto3,oneof"`
}

func (*RouteFlowRequest_Exec) isRouteFlowRequest_RouteRequest() {}

func (m *RouteFlowRequest) GetRouteRequest() isRouteFlowRequest_RouteRequest {
	if m != nil {
		return m.RouteRequest
	}
	return nil
}

func (m *RouteFlowRequest) GetExec() *RouteFlowRequest_Execute {
	if x, ok := m.GetRouteRequest().(*RouteFlowRequest_Exec); ok {
		return x.Exec
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RouteFlowRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RouteFlowRequest_Exec)(nil),
	}
}

type RouteFlowRequest_Execute struct {
	App                  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteFlowRequest_Execute) Reset()         { *m = RouteFlowRequest_Execute{} }
func (m *RouteFlowRequest_Execute) String() string { return proto.CompactTextString(m) }
func (*RouteFlowRequest_Execute) ProtoMessage()    {}
func (*RouteFlowRequest_Execute) Descriptor() ([]byte, []int) {
	return fileDescriptor_51baa40a1cc6b48b, []int{1, 0}
}

func (m *RouteFlowRequest_Execute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteFlowRequest_Execute.Unmarshal(m, b)
}
func (m *RouteFlowRequest_Execute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteFlowRequest_Execute.Marshal(b, m, deterministic)
}
func (m *RouteFlowRequest_Execute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteFlowRequest_Execute.Merge(m, src)
}
func (m *RouteFlowRequest_Execute) XXX_Size() int {
	return xxx_messageInfo_RouteFlowRequest_Execute.Size(m)
}
func (m *RouteFlowRequest_Execute) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteFlowRequest_Execute.DiscardUnknown(m)
}

var xxx_messageInfo_RouteFlowRequest_Execute proto.InternalMessageInfo

func (m *RouteFlowRequest_Execute) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type RouteFlowResponse struct {
	Seq int32 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	// Types that are valid to be assigned to Resp:
	//	*RouteFlowResponse_Error
	Resp                 isRouteFlowResponse_Resp `protobuf_oneof:"resp"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *RouteFlowResponse) Reset()         { *m = RouteFlowResponse{} }
func (m *RouteFlowResponse) String() string { return proto.CompactTextString(m) }
func (*RouteFlowResponse) ProtoMessage()    {}
func (*RouteFlowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51baa40a1cc6b48b, []int{2}
}

func (m *RouteFlowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteFlowResponse.Unmarshal(m, b)
}
func (m *RouteFlowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteFlowResponse.Marshal(b, m, deterministic)
}
func (m *RouteFlowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteFlowResponse.Merge(m, src)
}
func (m *RouteFlowResponse) XXX_Size() int {
	return xxx_messageInfo_RouteFlowResponse.Size(m)
}
func (m *RouteFlowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteFlowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RouteFlowResponse proto.InternalMessageInfo

func (m *RouteFlowResponse) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type isRouteFlowResponse_Resp interface {
	isRouteFlowResponse_Resp()
}

type RouteFlowResponse_Error struct {
	Error *ErrorStatus `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*RouteFlowResponse_Error) isRouteFlowResponse_Resp() {}

func (m *RouteFlowResponse) GetResp() isRouteFlowResponse_Resp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (m *RouteFlowResponse) GetError() *ErrorStatus {
	if x, ok := m.GetResp().(*RouteFlowResponse_Error); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RouteFlowResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RouteFlowResponse_Error)(nil),
	}
}

func init() {
	proto.RegisterType((*ErrorStatus)(nil), "flow.ErrorStatus")
	proto.RegisterType((*RouteFlowRequest)(nil), "flow.RouteFlowRequest")
	proto.RegisterType((*RouteFlowRequest_Execute)(nil), "flow.RouteFlowRequest.Execute")
	proto.RegisterType((*RouteFlowResponse)(nil), "flow.RouteFlowResponse")
}

func init() { proto.RegisterFile("connection.proto", fileDescriptor_51baa40a1cc6b48b) }

var fileDescriptor_51baa40a1cc6b48b = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0x97, 0xfd, 0x65, 0xa7, 0x88, 0x5b, 0x10, 0xad, 0x13, 0x64, 0xf4, 0xaa, 0xde, 0x64,
	0x32, 0x7d, 0x01, 0x0b, 0x93, 0xdd, 0x9a, 0x5d, 0xe8, 0x9d, 0x74, 0xf5, 0xac, 0x14, 0x6a, 0xd2,
	0x25, 0xa9, 0xdb, 0xde, 0xc0, 0xc7, 0x96, 0x34, 0xad, 0x0c, 0xdd, 0xdd, 0xe9, 0xe1, 0x3b, 0xbf,
	0xfe, 0xf2, 0xc1, 0x28, 0x91, 0x42, 0x60, 0x62, 0x32, 0x29, 0x58, 0xa1, 0xa4, 0x91, 0xb4, 0xbb,
	0xc9, 0xe5, 0x6e, 0x72, 0x9d, 0x4a, 0x99, 0xe6, 0x38, 0xab, 0x76, 0xeb, 0x72, 0x33, 0x8b, 0xc5,
	0xc1, 0x05, 0x82, 0x57, 0xf0, 0x16, 0x4a, 0x49, 0xb5, 0x32, 0xb1, 0x29, 0x35, 0xf5, 0x61, 0xf0,
	0x89, 0x5a, 0xc7, 0x29, 0xfa, 0x64, 0x4a, 0xc2, 0x21, 0x6f, 0x3e, 0x29, 0x83, 0xc1, 0x07, 0x9a,
	0x38, 0xcb, 0xb5, 0xdf, 0x9e, 0x76, 0x42, 0x6f, 0x7e, 0xc1, 0x1c, 0x95, 0x35, 0x54, 0xf6, 0x24,
	0x0e, 0xbc, 0x09, 0x05, 0xdf, 0x04, 0x46, 0x5c, 0x96, 0x06, 0x9f, 0x73, 0xb9, 0xe3, 0xb8, 0x2d,
	0x51, 0x1b, 0x3a, 0x82, 0x8e, 0xc6, 0x6d, 0x85, 0xee, 0x71, 0x3b, 0xd2, 0x47, 0xe8, 0xe2, 0x1e,
	0x13, 0xbf, 0x3d, 0x25, 0xa1, 0x37, 0xbf, 0x65, 0xd6, 0x97, 0xfd, 0xbd, 0x63, 0x8b, 0x3d, 0x26,
	0xa5, 0xc1, 0x65, 0x8b, 0x57, 0xe9, 0xc9, 0x0d, 0x0c, 0xea, 0x95, 0x45, 0xc6, 0x45, 0x51, 0xdb,
	0xda, 0x31, 0x3a, 0x87, 0x33, 0x65, 0x01, 0xef, 0xca, 0x5d, 0x07, 0x6f, 0x30, 0x3e, 0x22, 0xea,
	0x42, 0x0a, 0x8d, 0x27, 0x54, 0xee, 0xa0, 0x87, 0xb6, 0x8a, 0xda, 0x65, 0xec, 0x5c, 0x8e, 0xda,
	0x59, 0xb6, 0xb8, 0x4b, 0x44, 0x7d, 0xe8, 0x2a, 0xd4, 0xc5, 0xfc, 0x05, 0x3c, 0x0b, 0x5d, 0xa1,
	0xfa, 0xca, 0x12, 0xa4, 0x11, 0x0c, 0x7f, 0x7f, 0x44, 0x2f, 0x4f, 0xbf, 0x65, 0x72, 0xf5, 0x6f,
	0xef, 0x8c, 0x82, 0x56, 0x48, 0xee, 0xc9, 0xba, 0x5f, 0xd5, 0xf9, 0xf0, 0x13, 0x00, 0x00, 0xff,
	0xff, 0x8e, 0xb3, 0xb6, 0xa5, 0xcc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FlowServiceClient is the client API for FlowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlowServiceClient interface {
	RouteFlow(ctx context.Context, opts ...grpc.CallOption) (FlowService_RouteFlowClient, error)
}

type flowServiceClient struct {
	cc *grpc.ClientConn
}

func NewFlowServiceClient(cc *grpc.ClientConn) FlowServiceClient {
	return &flowServiceClient{cc}
}

func (c *flowServiceClient) RouteFlow(ctx context.Context, opts ...grpc.CallOption) (FlowService_RouteFlowClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FlowService_serviceDesc.Streams[0], "/flow.FlowService/RouteFlow", opts...)
	if err != nil {
		return nil, err
	}
	x := &flowServiceRouteFlowClient{stream}
	return x, nil
}

type FlowService_RouteFlowClient interface {
	Send(*RouteFlowRequest) error
	Recv() (*RouteFlowResponse, error)
	grpc.ClientStream
}

type flowServiceRouteFlowClient struct {
	grpc.ClientStream
}

func (x *flowServiceRouteFlowClient) Send(m *RouteFlowRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *flowServiceRouteFlowClient) Recv() (*RouteFlowResponse, error) {
	m := new(RouteFlowResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FlowServiceServer is the server API for FlowService service.
type FlowServiceServer interface {
	RouteFlow(FlowService_RouteFlowServer) error
}

// UnimplementedFlowServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFlowServiceServer struct {
}

func (*UnimplementedFlowServiceServer) RouteFlow(srv FlowService_RouteFlowServer) error {
	return status.Errorf(codes.Unimplemented, "method RouteFlow not implemented")
}

func RegisterFlowServiceServer(s *grpc.Server, srv FlowServiceServer) {
	s.RegisterService(&_FlowService_serviceDesc, srv)
}

func _FlowService_RouteFlow_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FlowServiceServer).RouteFlow(&flowServiceRouteFlowServer{stream})
}

type FlowService_RouteFlowServer interface {
	Send(*RouteFlowResponse) error
	Recv() (*RouteFlowRequest, error)
	grpc.ServerStream
}

type flowServiceRouteFlowServer struct {
	grpc.ServerStream
}

func (x *flowServiceRouteFlowServer) Send(m *RouteFlowResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *flowServiceRouteFlowServer) Recv() (*RouteFlowRequest, error) {
	m := new(RouteFlowRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FlowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flow.FlowService",
	HandlerType: (*FlowServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RouteFlow",
			Handler:       _FlowService_RouteFlow_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "connection.proto",
}
